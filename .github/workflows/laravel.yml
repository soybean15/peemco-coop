name: CI/CD Pipeline with Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:

    
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 3: Build and Run Services with Docker Compose
      - name: Build and Start Services
        run: |
          docker compose up -d --build
          echo 'Test env ${{ env.DB_CONNECTION }}'



      # Step 4: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 5: Copy .env.example to .env
      - name: Copy .env.example to .env
        run: |
          cp .env.example .env

      # Step 6: Replace variables in .env file with GitHub Secrets
      - name: Replace .env variables with secrets
        run: |
          sed -i 's/APP_KEY=.*/APP_KEY=${{ var.DB_DATABASE }}/' .env
          sed -i 's/DB_HOST=.*/DB_HOST=${{ vars.DB_HOST }}/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=${{ var.DB_USERNAME }}/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=${{ var.DB_PASSWORD }}/' .env
       

      # Step 7: Run Tests
      - name: Run Tests
        run: docker exec peemco php artisan test

      # Step 5: Shut Down Services
      - name: Shut Down Services
        run: docker compose down

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: SSH and Deploy with Docker Compose
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd main/peemco-coop
            git pull origin main
            docker-compose pull
            docker-compose up -d
